// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String?
  githubToken  String?
  githubId     String?   @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  projects     Project[]
}

model Project {
  id              String        @id @default(cuid())
  name            String
  description     String?
  userId          String
  githubRepo      String?
  status          ProjectStatus @default(PENDING)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  environments    Environment[]
  sandboxes       Sandbox[]
}

model Environment {
  id            String   @id @default(cuid())
  projectId     String
  key           String
  value         String   @db.Text
  category      String?  // 'auth', 'payment', 'general'
  isSecret      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  project       Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([projectId, key])
}

model Sandbox {
  id                String        @id @default(cuid())
  projectId         String
  k8sNamespace      String
  k8sDeploymentName String
  k8sServiceName    String
  dbHost            String?
  dbPort            Int?
  dbName            String?
  dbUser            String?
  dbPassword        String?
  publicUrl         String?
  status            SandboxStatus @default(CREATING)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  project           Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

enum ProjectStatus {
  PENDING
  INITIALIZING
  READY
  DEPLOYING
  DEPLOYED
  ERROR
}

enum SandboxStatus {
  CREATING
  RUNNING
  STOPPED
  ERROR
  TERMINATED
}